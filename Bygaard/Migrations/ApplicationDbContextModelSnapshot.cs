// <auto-generated />
using System;
using Bygaard.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bygaard.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bygaard.Entities.GrowRoom", b =>
                {
                    b.Property<Guid>("GrowRoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfTrolleys")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("GrowRoomId");

                    b.ToTable("GrowRooms");

                    b.HasData(
                        new
                        {
                            GrowRoomId = new Guid("e6e822cc-1265-4049-9e58-f26f1430e690"),
                            CreatedAt = new DateTime(2023, 4, 29, 14, 36, 13, 958, DateTimeKind.Local).AddTicks(7613),
                            Name = "1",
                            NumberOfTrolleys = 16,
                            UpdatedAt = new DateTime(2023, 4, 29, 14, 36, 13, 961, DateTimeKind.Local).AddTicks(419)
                        },
                        new
                        {
                            GrowRoomId = new Guid("581e65c4-9218-419f-bcc7-d8f5d51ceb72"),
                            CreatedAt = new DateTime(2023, 4, 29, 14, 36, 13, 961, DateTimeKind.Local).AddTicks(794),
                            Name = "2",
                            NumberOfTrolleys = 16,
                            UpdatedAt = new DateTime(2023, 4, 29, 14, 36, 13, 961, DateTimeKind.Local).AddTicks(805)
                        },
                        new
                        {
                            GrowRoomId = new Guid("cb036669-86d9-4e54-96f1-a6bda078965e"),
                            CreatedAt = new DateTime(2023, 4, 29, 14, 36, 13, 961, DateTimeKind.Local).AddTicks(809),
                            Name = "3",
                            NumberOfTrolleys = 16,
                            UpdatedAt = new DateTime(2023, 4, 29, 14, 36, 13, 961, DateTimeKind.Local).AddTicks(811)
                        },
                        new
                        {
                            GrowRoomId = new Guid("6c251710-0762-4ddd-b3a9-3e374ca7faac"),
                            CreatedAt = new DateTime(2023, 4, 29, 14, 36, 13, 961, DateTimeKind.Local).AddTicks(814),
                            Name = "4",
                            NumberOfTrolleys = 16,
                            UpdatedAt = new DateTime(2023, 4, 29, 14, 36, 13, 961, DateTimeKind.Local).AddTicks(815)
                        },
                        new
                        {
                            GrowRoomId = new Guid("60235772-37ea-4624-b23f-d3f50f480a80"),
                            CreatedAt = new DateTime(2023, 4, 29, 14, 36, 13, 961, DateTimeKind.Local).AddTicks(818),
                            Name = "5",
                            NumberOfTrolleys = 16,
                            UpdatedAt = new DateTime(2023, 4, 29, 14, 36, 13, 961, DateTimeKind.Local).AddTicks(820)
                        },
                        new
                        {
                            GrowRoomId = new Guid("f2b2c5c5-df43-49d8-90db-3d8ec3aecc45"),
                            CreatedAt = new DateTime(2023, 4, 29, 14, 36, 13, 961, DateTimeKind.Local).AddTicks(823),
                            Name = "6",
                            NumberOfTrolleys = 16,
                            UpdatedAt = new DateTime(2023, 4, 29, 14, 36, 13, 961, DateTimeKind.Local).AddTicks(825)
                        });
                });

            modelBuilder.Entity("Bygaard.Entities.Stock", b =>
                {
                    b.Property<Guid>("StockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StockId");

                    b.ToTable("Stock");

                    b.HasData(
                        new
                        {
                            StockId = new Guid("5a4dead3-e0c3-437a-9408-b960cc9a4780"),
                            Name = "Main Storage"
                        });
                });

            modelBuilder.Entity("Bygaard.Entities.StockItem", b =>
                {
                    b.Property<Guid>("StockItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<Guid>("StockId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SubstrateName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StockItemId");

                    b.HasIndex("StockId");

                    b.ToTable("StockItem");
                });

            modelBuilder.Entity("Bygaard.Entities.Substrate", b =>
                {
                    b.Property<Guid>("SubstrateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DaysInGrowthPhase")
                        .HasColumnType("int");

                    b.Property<int>("DaysInHarvestingPhase")
                        .HasColumnType("int");

                    b.Property<int>("DaysInOpeningPhase1")
                        .HasColumnType("int");

                    b.Property<int>("DaysInOpeningPhase2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("KgsInStock")
                        .HasColumnType("float");

                    b.Property<string>("LatinName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("SubstrateId");

                    b.ToTable("Substrates");
                });

            modelBuilder.Entity("Bygaard.Entities.StockItem", b =>
                {
                    b.HasOne("Bygaard.Entities.Stock", "Stock")
                        .WithMany("StockItems")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("Bygaard.Entities.Stock", b =>
                {
                    b.Navigation("StockItems");
                });
#pragma warning restore 612, 618
        }
    }
}
